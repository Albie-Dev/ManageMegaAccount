@inject NavigationManager Navigation
@inject IToastService ToastService

@code {
    [Parameter]
    public List<ErrorDetailDto> Errors { get; set; } = new List<ErrorDetailDto>();
    [Parameter]
    public string FieldName { get; set; } = string.Empty;
    [Parameter]
    public string FormSummaryId { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;
    private List<string> FormSummaryErrors { get; set; } = new();

    protected override void OnAfterRender(bool firstRender)
    {
        HandleErrors();
    }

    private void HandleErrors()
    {
        if (Errors == null || !Errors.Any()) return;

        foreach (var error in Errors)
        {
            switch (error.ErrorScope)
            {
                case CErrorScope.Field:
                    // Display field-specific error
                    if ($"{FieldName}_Error" == error.Field)
                    {
                        ErrorMessage = error.Error;
                    }
                    break;
                case CErrorScope.FormSummary:
                    // Display form summary error
                    FormSummaryErrors.Add(item: error.Error);
                    break;
                case CErrorScope.PageSumarry:
                    // Display page summary error using toast service
                    ToastService.ShowError(error.Error);
                    break;
                case CErrorScope.RedirectPage:
                    // Redirect to notification summary page
                    Navigation.NavigateTo("/notificationsummary");
                    break;
                case CErrorScope.Global:
                    // Redirect to internal server error page
                    Navigation.NavigateTo("/internalservererror");
                    break;
                case CErrorScope.RedirectToLoginPage:
                    // Redirect to login page
                    Navigation.NavigateTo("/login");
                    break;
                default:
                    break;
            }
        }
    }
}

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <span class="text-danger error-message-display">@ErrorMessage</span>

}

@if (!string.IsNullOrEmpty(FormSummaryId) && !FormSummaryErrors.IsNullOrEmpty())
{
    <ul class="alert alert-danger" >
        @foreach(string errorMessage in FormSummaryErrors)
        {
            <li>
                @errorMessage
            </li>
        }
    </ul>
}
