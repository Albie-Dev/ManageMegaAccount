@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject ApiAuthenticationStateProvider _authProvider;

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity?.Name!
        <button class="btn btn-sm btn-outline-secondary" @onclick="LogoutAsync">Đăng xuất</button>
    </Authorized>
    <NotAuthorized>
        <a class="btn btn-sm btn-outline-primary" href="/login">Đăng nhập</a>
    </NotAuthorized>
</AuthorizeView>

@if(IsLoad)
{
    <LoadingElement />
}

@code{
    private bool IsLoad { get; set; } = false;
    private async Task LogoutAsync()
    {
        IsLoad = true;
        var loginResponseDto = (await _localStorageService.GetItemAsStringAsync(key: ApiClientConstant.LocalStorage_Key) ?? string.Empty)
            .FromJson<LoginResponseDto>();
        if (loginResponseDto != null)
        {
            var response = await _httpClientHelper.PostAsync<LogoutRequestDto, RedirectResponseDto>(
                endpoint: Path.Combine(path1: EndpointConstant.CET_Base_Url, path2: EndpointConstant.CET_Auth_Logout),
                data: new LogoutRequestDto()
                {
                    IsAllDevice = false,
                    AuthType = loginResponseDto.AuthType
                },
                requestType: CHttpClientType.Private,
                portalType: CPortalType.CET);
            await _localStorageService.RemoveItemAsync(key: ApiClientConstant.LocalStorage_Key);
            await _localStorageService.RemoveItemAsync(key: ApiClientConstant.LocalStorage_Key_Microsoft_State);
            _authProvider.MarkUserAsLoggedOut();
            StateHasChanged();
            IsLoad = false;
            if (response != null && response.Success
                && response.Data != null
                && !string.IsNullOrEmpty(response.Data.Url))
            {
                _navigationManager.NavigateTo(uri: response.Data.Url);
            }
            else
            {
                _navigationManager.NavigateTo("/", forceLoad: true);
            }
        }
    }
}
